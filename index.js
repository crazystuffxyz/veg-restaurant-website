const express=require("express"),bodyParser=require("body-parser"),nodemailer=require("nodemailer"),moment=require("moment-timezone"),path=require("path"),crypto=require("crypto"),fs=require("fs"),app=express(),PORT=process.env.PORT||8080,MAIL_USER=process.env.MAIL_USER||"noreply.greenbites@gmail.com",MAIL_PASS=process.env.MAIL_PASS||"nfsosblnvicdqddz",RESTAURANT_PHONE=process.env.RESTAURANT_PHONE||"(703) 319-2700",RESTAURANT_TIMEZONE=process.env.RESTAURANT_TIMEZONE||"America/New_York",ADMIN_USERNAME=process.env.ADMIN_USER||"OfficialGreenBitesAdmin",ADMIN_PASSWORD=process.env.ADMIN_PASSWORD||"GreenBites314159";function escapeHtml(e){return"string"!=typeof e?"":e.replace(/&/g,"&").replace(/</g,"<").replace(/>/g,">").replace(/"/g,'"').replace(/'/g,"'")}app.use(bodyParser.urlencoded({extended:!0})),app.use(bodyParser.json()),app.use(express.static(path.join(__dirname,"public")));let reservations=[];const RESERVATION_DURATION_MINUTES=60,CAPACITY_LIMIT=50,TIME_SLOT_INTERVAL=30,VERIFICATION_EXPIRY_MINUTES=15,MIN_ADVANCE_BOOKING_MINUTES=15,AVAILABLE_TIMES=["11:00","11:30","12:00","12:30","13:00","13:30","14:00","14:30","15:00","15:30","16:00","16:30","17:00","17:30","18:00","18:30","19:00","19:30","20:00","20:30","21:00"];let reviews=[{id:"review-bobby",name:"Bobby Filet",stars:5,text:"The chef actually beat me on my own show. I am not a big fan of Vegetarian food but this place is legit.",createdAt:moment("2025-04-04").toISOString(),status:"approved"},{id:"review-guy",name:"Guy Scary",stars:5,text:"If you need a funkalicious trip to flavortown, this is your spot. The real deal.",createdAt:moment("2025-04-07").toISOString(),status:"approved"},{id:"review-ramsay",name:"Garden Ramsay",stars:4,text:"My restaurants are better but this one comes a close second. I'd rather be here today than file my taxes.",createdAt:moment("2025-04-16").toISOString(),status:"approved"},{id:"review-alex",name:"Alex Garamasalachili",stars:5,text:"If you are looking for healthy and flavorful options, you have got to come here. It is only a matter of time before Green Bites gets a visit from someone from The Tire Company",createdAt:moment("2025-04-18").toISOString(),status:"approved"},{id:"review-chen",name:"Wei Chen",stars:5,text:"A great experience. The Gourmet Avocado Toast and Simple Mixed Greens were absolutely divine. Great service.",createdAt:moment("2025-03-28").toISOString(),status:"approved"},{id:"review-garcia",name:"Maria Garcia",stars:5,text:"A gem. Farm-to-table theme is a big winner, especially in the Spinach Beet Salad.",createdAt:moment("2025-03-29").toISOString(),status:"approved"},{id:"review-ali",name:"Fatima Ali",stars:5,text:"Fresh ingredients and beautiful presentation. The Ghost Pepper Chili was an amazing, full-bodied spice mixture.",createdAt:moment("2025-03-30").toISOString(),status:"approved"},{id:"review-smith",name:"John Smith",stars:5,text:"I love the innovation. The Mapo Tofu was rich in depth of flavor, and the Artisan Veggie Pizza was filled with fresh ingredients.",createdAt:moment("2025-03-31").toISOString(),status:"approved"},{id:"review-patel",name:"Priya Patel",stars:5,text:"The Green Bites Signature Burger was a hit. So tasty and included a side of fries that were very crispy!",createdAt:moment("2025-04-01").toISOString(),status:"approved"},{id:"review-kim",name:"David Kim",stars:5,text:"Delicious food. We ordered the Creamed Spinach & Artichoke Dip that was totally creamy and very fresh tasting. The Mediterranean Quinoa Salad and Crispy Falafel Platter were both great!",createdAt:moment("2025-04-02").toISOString(),status:"approved"}],unapprovedReviews=[],reviewIdCounter=reviews.length+unapprovedReviews.length+100;function calculateOccupancy(e){let t=0;return reservations.forEach((r=>{if("confirmed"!==r.status)return;const o=moment(e);let s=moment.tz(`${r.date} ${r.time}`,"YYYY-MM-DD HH:mm",r.timezone||RESTAURANT_TIMEZONE),i=moment(s).add(RESERVATION_DURATION_MINUTES,"minutes");(s.isBefore(o)||s.isSame(o))&&i.isAfter(e)&&(console.log(`Start time ${s} is in between ${e} and  ${o}`),t+=parseInt(r.numberOfPeople,10)||0)})),t}function processReservation(e){return new Promise(((t,r)=>{const{name:o,email:s,date:i,time:n,numberOfPeople:a,specialRequests:l}=e;if(!(o&&s&&i&&n&&a))return r("Missing required info.");const m=parseInt(a,10);if(isNaN(m)||m<1)return r("Invalid number of people.");if(m>8)return r(`For parties > 8, please call ${RESTAURANT_PHONE}.`);moment.tz(RESTAURANT_TIMEZONE);let d;try{if(d=moment.tz(`${i} ${n}`,"YYYY-MM-DD HH:mm",!0,RESTAURANT_TIMEZONE),!d.isValid())throw new Error("Invalid date/time format.")}catch(e){return r("Invalid date or time format. Please use YYYY-MM-DD and HH:mm.")}if(!AVAILABLE_TIMES.includes(n))return r(`Invalid time selected (${escapeHtml(n)}). Please choose from available slots.`);const c=moment.tz(RESTAURANT_TIMEZONE).add(15,"minutes");if(d.isBefore(c))return r(`Cannot make reservations less than 15 minutes in advance or for a past time. Current time is ${c.format("h:mm A")}.`);const p=calculateOccupancy(d);if(p+m>50){const e=Math.max(0,50-p);return r(`Fully booked for ${m} at ${d.format("h:mm A")}. ${e>0?`Only ${e} seat(s) remaining.`:"No seats remaining."}`)}let u=Date.now().toString(36)+crypto.randomBytes(4).toString("hex"),f=crypto.randomBytes(20).toString("hex"),g=moment().add(15,"minutes"),v={id:u,name:escapeHtml(o.trim()),email:s.trim().toLowerCase(),date:i,time:n,numberOfPeople:m,specialRequests:l?escapeHtml(l.trim()):"",requestedAt:moment().toISOString(),verified:!1,verificationToken:f,verificationExpires:g.toISOString(),status:"pending_verification",timezone:RESTAURANT_TIMEZONE};reservations.unshift(v),t(v)}))}const mailFrom=`"Green Bites Reservations" <${MAIL_USER}>`;let transporter=nodemailer.createTransport({service:"gmail",auth:{user:MAIL_USER,pass:MAIL_PASS}});function adminAuth(e,t,r){const o=e.headers.authorization;if(!o)return t.setHeader("WWW-Authenticate",'Basic realm="Admin Area"'),t.status(401).send(verificationResponsePage("Authentication Required","You need to log in to access the admin area.","error",!0));const[s,i]=o.split(" ");if("Basic"!==s||!i)return t.setHeader("WWW-Authenticate",'Basic realm="Admin Area"'),t.status(401).send(verificationResponsePage("Authentication Required","Invalid authentication method. Basic Auth required.","error",!0));let n;try{n=Buffer.from(i,"base64").toString("utf8")}catch(e){return console.error("Error decoding basic auth credentials:",e),t.status(400).send(verificationResponsePage("Bad Request","Malformed authentication credentials.","error"))}const[a,l]=n.split(":");return a===ADMIN_USERNAME&&l===ADMIN_PASSWORD?r():(console.warn(`Admin login failed for user: ${a}`),t.setHeader("WWW-Authenticate",'Basic realm="Admin Area"'),t.status(401).send(verificationResponsePage("Authentication Failed","Invalid username or password.","error",!0)))}transporter.verify(((e,t)=>{e?console.error("Nodemailer verification failed:",e):console.log("Nodemailer is ready to send emails.")})),app.get("/availability",((e,t)=>{const{date:r,partySize:o}=e.query;if(!r||!moment(r,"YYYY-MM-DD",!0).isValid())return t.status(400).json({error:"Valid date parameter (YYYY-MM-DD) is required."});const s=moment.tz(RESTAURANT_TIMEZONE);if(moment.tz(r,"YYYY-MM-DD",RESTAURANT_TIMEZONE).startOf("day").isBefore(s.startOf("day")))return console.log(`Availability check for past date: ${r}. Returning no slots.`),t.status(200).json({date:r,requestedPartySize:o?parseInt(o,10):0,capacityLimit:50,slots:[],message:"Cannot check availability for past dates."});const i=parseInt(o,10);if(isNaN(i)||i<1)return t.status(400).json({error:"Valid partySize parameter (integer >= 1) is required."});if(i>8)return t.status(200).json({date:r,requestedPartySize:i,capacityLimit:50,slots:[],message:`For parties > 8, please call ${RESTAURANT_PHONE}.`});const n=AVAILABLE_TIMES.map((e=>{const t=moment.tz(`${r} ${e}`,"YYYY-MM-DD HH:mm",RESTAURANT_TIMEZONE);let o="unknown",s=0;const n=moment.tz(RESTAURANT_TIMEZONE).add(10,"minutes");if(t.isBefore(n))o="past",s=0;else{const e=calculateOccupancy(t);s=Math.max(0,50-e),s<=0?(o="full",s=0):o=s<i?"limited":"available"}return{time:e,displayTime:moment(e,"HH:mm").format("h:mm A"),status:o,availableSeats:s,slotIsoString:t.toISOString(!0),_slotDateTimeMoment:t}}));let a=null;const l=n.map((e=>{const t={...e},r=t._slotDateTimeMoment;if(a&&r.isBefore(a)&&"past"!==t.status&&"full"!==t.status&&(console.log(`Applying block-out to ${t.time} due to earlier full slot. Blocked until: ${a.format()}`),t.status="limited",t.availableSeats=0),"full"===e.status){const e=r.clone().add(1,"hour");a&&!e.isAfter(a)||(console.log(`Slot ${t.time} is full. Setting/Extending block-out until: ${e.format()}`),a=e)}return delete t._slotDateTimeMoment,t}));t.status(200).json({date:r,requestedPartySize:i,capacityLimit:50,slots:l})})),app.post("/reserve",(async(e,t)=>{console.log("Received reservation request:",e.body);try{const r=await processReservation(e.body),o=e.protocol,s=`${o}://${e.get("host")}/verify?resId=${r.id}&token=${r.verificationToken}`,i={from:mailFrom,to:r.email,subject:"Confirm Your Reservation!",html:verificationEmailTemplate(r,s,15)};let n=await transporter.sendMail(i);console.log("Verification email sent:",n.messageId),t.status(200).json({success:!0,message:`Verification email sent to ${escapeHtml(r.email)}! Please check your spam folder if you didn't get the email.`})}catch(e){console.error("Error processing reservation request:",e);const r="string"==typeof e?e:e.message||"Failed to process reservation request.";t.status(400).json({success:!1,error:r})}})),app.get("/verify",((e,t)=>{const{resId:r,token:o}=e.query;if(!r||!o)return t.status(400).send(verificationResponsePage("Verification Failed","Link incomplete.","error"));const s=reservations.findIndex((e=>e.id===r));if(-1===s)return t.status(404).send(verificationResponsePage("Verification Failed","Reservation not found. It might have expired or been removed.","error"));const i=reservations[s],n=i.timezone||RESTAURANT_TIMEZONE,a=moment.tz(`${i.date} ${i.time}`,"YYYY-MM-DD HH:mm",n).format("dddd, MMMM Do, YYYY"),l=moment.tz(`${i.date} ${i.time}`,"YYYY-MM-DD HH:mm",n).format("h:mm A z");if("confirmed"===i.status)return t.status(200).send(verificationResponsePage("Already Confirmed",`Reservation for ${escapeHtml(i.numberOfPeople.toString())} on ${a} at ${l} is confirmed!`,"success"));if("pending_verification"!==i.status)return t.status(410).send(verificationResponsePage("Link No Longer Valid",`Status: '${escapeHtml(i.status)}'.`,"error"));if(moment().isAfter(moment(i.verificationExpires)))return console.warn(`Verification failed: Token expired for ID ${r}.`),reservations[s].status="expired_unverified",reservations[s].verificationToken=null,t.status(410).send(verificationResponsePage("Verification Expired","Sorry, this link expired (valid for 15 minutes). Please make a new reservation.","error"));if(i.verificationToken!==o)return t.status(400).send(verificationResponsePage("Verification Failed","Invalid token.","error"));const m=moment.tz(`${i.date} ${i.time}`,"YYYY-MM-DD HH:mm",n),d=parseInt(i.numberOfPeople,10),c=calculateOccupancy(m);if(c+d>50)return console.warn(`Verification BLOCKED for ID ${r}: Slot ${i.date} ${i.time} became fully booked. Occupancy: ${c}, Requesting: ${d}, Limit: 50`),reservations.splice(s,1),t.status(409).send(verificationResponsePage("Booking Failed","Sorry, but this time slot became fully booked while your confirmation was pending. Please try booking a different time.","error"));console.log(`Verification SUCCESS for ID: ${r}. Capacity OK (Current: ${c}, Adding: ${d}, Limit: 50)`),reservations[s].status="confirmed",reservations[s].verificationToken=null,reservations[s].verificationExpires=null,reservations[s].verifiedAt=moment().toISOString(),sendConfirmationEmail(reservations[s]).catch((e=>console.error(`Error sending confirmation email for ${r}:`,e))),t.status(200).send(verificationResponsePage("Reservation Confirmed!",`Thank you, ${escapeHtml(reservations[s].name)}! Your reservation for ${escapeHtml(reservations[s].numberOfPeople.toString())} on <strong>${a}</strong> at <strong>${l}</strong> is confirmed. ${reservations[s].specialRequests?'<br/><br/>Request: "'+escapeHtml(reservations[s].specialRequests)+'"':""}<br/><br/>See you soon!`,"success"))})),app.get("/reviews",((e,t)=>{const r=[...reviews].filter((e=>"approved"===e.status)).sort(((e,t)=>moment(t.createdAt).diff(moment(e.createdAt))));t.status(200).json(r)})),app.post("/reviews",((e,t)=>{console.log("Received review submission:",e.body);const{name:r,stars:o,text:s}=e.body,i=parseInt(o,10);if(!i||isNaN(i)||i<1||i>5)return t.status(400).json({success:!1,error:"A valid star rating (1-5) is required."});const n=s&&"string"==typeof s?s.trim().slice(0,1e3):null,a=r&&"string"==typeof r?r.trim().slice(0,50):null,l={id:`rev_${Date.now()}_${reviewIdCounter++}`,name:a?escapeHtml(a):null,stars:i,text:n?escapeHtml(n):null,createdAt:moment().toISOString(),status:"pending"};unapprovedReviews.unshift(l),console.log("New review submitted for approval:",l.id),t.status(201).json({success:!0,message:"Thank you for your review! It has been submitted for approval and should appear within 24 hours once verified."})}));const adminRouter=express.Router();function verificationResponsePage(e,t,r="info",o=!1){let s="bg-blue-100",i="text-blue-800",n="border-blue-300",a="ℹ️";return"success"===r?(s="bg-green-100",i="text-green-800",n="border-green-300",a="✅"):"error"===r&&(s="bg-red-100",i="text-red-800",n="border-red-300",a="❌"),`<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>${escapeHtml(e)} - Green Bites</title>\n    <script src="https://cdn.tailwindcss.com"><\/script>\n</head>\n<body class="bg-gray-100 flex items-center justify-center min-h-screen">\n    <div class="bg-white p-8 md:p-12 rounded-lg shadow-lg text-center max-w-lg mx-4">\n        <h1 class="text-2xl md:text-3xl font-bold text-gray-800 mb-6">${escapeHtml(e)}</h1>\n        <div class="status-box ${s} ${i} border ${n} rounded-md p-4 mb-6">\n            <span class="text-3xl block mb-2">${a}</span>\n            <p class="text-base md:text-lg leading-relaxed">${t}</p> \x3c!-- Raw HTML allowed here for formatting like <strong> --\x3e\n        </div>\n        ${o?'<p class="text-sm text-gray-600">Please provide your admin credentials.</p>':`<div class="mt-8 text-sm text-gray-600">\n                <p><a href="/" class="text-blue-600 hover:underline">Return to Green Bites Home</a></p>\n                <p class="mt-2">Questions? Call us at ${escapeHtml(RESTAURANT_PHONE)}</p>\n            </div>`}\n    </div>\n</body>\n</html>`}function verificationEmailTemplate(e,t,r){const o=e.timezone||RESTAURANT_TIMEZONE,s=moment.tz(`${e.date} ${e.time}`,"YYYY-MM-DD HH:mm",o).format("dddd, MMMM Do, YYYY"),i=moment.tz(`${e.date} ${e.time}`,"YYYY-MM-DD HH:mm",o).format("h:mm A z"),n=(moment(e.verificationExpires).format("h:mm A z"),escapeHtml(e.name));return`<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>Confirm Your Reservation</title> <style> body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; line-height: 1.6; color: #374151; margin: 0; padding: 0; background-color: #f3f4f6; } .container { padding: 25px; max-width: 600px; margin: 20px auto; background-color: #ffffff; border: 1px solid #e5e7eb; border-radius: 8px; } h2 { color: #1e40af; margin-top: 0; } p { margin-bottom: 15px; } strong { color: #111827; font-weight: 600; } .details { background-color: #f9fafb; padding: 15px; border-radius: 6px; margin-bottom: 20px; border: 1px solid #e5e7eb; } .details strong { display: inline-block; min-width: 80px; } .button-container { text-align: center; margin: 30px 0; } .button { background-color: #10b981; color: #ffffff !important; padding: 12px 28px; text-decoration: none; border-radius: 6px; font-weight: 600; font-size: 16px; display: inline-block; border: none; cursor: pointer; } .expires { font-size: 0.9em; color: #6b7280; text-align: center; margin-top: -15px; margin-bottom: 20px; } .footer { margin-top: 25px; font-size: 0.85em; text-align: center; color: #9ca3af; border-top: 1px solid #e5e7eb; padding-top: 15px; } </style> </head> <body> <div class="container"> <h2>Confirm Your Reservation at Green Bites</h2> <p>Hello ${n},</p> <p>Please confirm your reservation details below and click the button to verify:</p> <div class="details"> <p style="margin-bottom: 10px;"><strong>Name:</strong> ${n}</p> <p style="margin-bottom: 10px;"><strong>Date:</strong> ${s}</p> <p style="margin-bottom: 10px;"><strong>Time:</strong> ${i}</p> <p style="margin-bottom: 10px;"><strong>Guests:</strong> ${escapeHtml(e.numberOfPeople.toString())}</p> ${e.specialRequests?`<p style="margin-bottom: 10px;"><strong>Requests:</strong> ${escapeHtml(e.specialRequests)}</p>`:""} </div> <p>Please confirm within <strong style="color: #d97706;">${r} minutes</strong> to secure your table:</p> <div class="button-container"> <a href="${t}" target="_blank" class="button" style="color: #ffffff;">Verify My Reservation</a> </div>  <p>If you didn't request this reservation, please ignore this email. Your details won't be stored if unverified.</p> <div class="footer"> <p>Green Bites | 2900 Sutton Rd, Vienna, VA | ${escapeHtml(RESTAURANT_PHONE)}</p> </div> </div> <a href="${t}">Can't see your link? Click here!</a></body> </html>`}function confirmationEmailTemplate(e){const t=e.timezone||RESTAURANT_TIMEZONE,r=moment.tz(`${e.date} ${e.time}`,"YYYY-MM-DD HH:mm",t).format("dddd, MMMM Do, YYYY"),o=moment.tz(`${e.date} ${e.time}`,"YYYY-MM-DD HH:mm",t).format("h:mm A z"),s=escapeHtml(e.name);return`<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>Reservation Confirmed!</title> <style> body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; line-height: 1.6; color: #374151; margin: 0; padding: 0; background-color: #f3f4f6; } .container { padding: 25px; max-width: 600px; margin: 20px auto; background-color: #ffffff; border: 1px solid #e5e7eb; border-radius: 8px; } h2 { color: #059669; margin-top: 0; } p { margin-bottom: 15px; } strong { color: #111827; font-weight: 600; } .details { background-color: #f9fafb; padding: 15px; border-radius: 6px; margin-bottom: 20px; border: 1px solid #e5e7eb; } .details strong { display: inline-block; min-width: 80px; } .notes { background-color: #eff6ff; color: #1e40af; padding: 15px; border-radius: 6px; border: 1px solid #bfdbfe; font-size: 0.95em; } .footer { margin-top: 25px; font-size: 0.85em; text-align: center; color: #9ca3af; border-top: 1px solid #e5e7eb; padding-top: 15px; } </style> </head> <body> <div class="container"> <h2>Your Green Bites Reservation is Confirmed!</h2> <p>Hello ${s},</p> <p>This email confirms your reservation details:</p> <div class="details"> <p style="margin-bottom: 10px;"><strong>Name:</strong> ${s}</p> <p style="margin-bottom: 10px;"><strong>Date:</strong> ${r}</p> <p style="margin-bottom: 10px;"><strong>Time:</strong> ${o}</p> <p style="margin-bottom: 10px;"><strong>Guests:</strong> ${escapeHtml(e.numberOfPeople.toString())}</p> ${e.specialRequests?`<p style="margin-bottom: 10px;"><strong>Requests:</strong> ${escapeHtml(e.specialRequests)}</p>`:""} </div> <p>We look forward to welcoming you!</p> <div class="notes"> <p style="margin: 0;"><strong>Notes:</strong> Please try to arrive 5-10 minutes before your reservation time. If your plans change, please call us at ${escapeHtml(RESTAURANT_PHONE)} to modify or cancel. Our address is 2900 Sutton Rd, Vienna, VA.</p> </div> <p style="margin-top: 20px;">Sincerely,<br>The Green Bites Team</p> <div class="footer"> <p>Green Bites | 2900 Sutton Rd, Vienna, VA | ${escapeHtml(RESTAURANT_PHONE)}</p> </div> </div> </body> </html>`}async function sendConfirmationEmail(e){console.log(`Sending confirmation email to ${e.email} for ID: ${e.id}`);const t=e.timezone||RESTAURANT_TIMEZONE,r=moment.tz(`${e.date} ${e.time}`,"YYYY-MM-DD HH:mm",t).format("h:mm A"),o=moment.tz(`${e.date} ${e.time}`,"YYYY-MM-DD HH:mm",t).format("MMM D"),s={from:mailFrom,to:e.email,subject:`Confirmed: Green Bites Reservation ${o} at ${r}`,html:confirmationEmailTemplate(e)};try{let e=await transporter.sendMail(s);return console.log("Confirmation email sent:",e.messageId),e}catch(t){throw console.error(`Failed confirmation email to ${e.email} for ${e.id}:`,t),t}}adminRouter.use(adminAuth),adminRouter.get("/",((e,t)=>{t.sendFile(path.join(__dirname,"public","admin.html"))})),adminRouter.get("/api/reviews/pending",((e,t)=>{const r=[...unapprovedReviews].sort(((e,t)=>moment(t.createdAt).diff(moment(e.createdAt))));t.status(200).json(r)})),adminRouter.post("/api/reviews/approve/:id",((e,t)=>{const r=e.params.id,o=unapprovedReviews.findIndex((e=>e.id===r));if(-1===o)return t.status(404).json({success:!1,message:"Review not found in pending list."});const[s]=unapprovedReviews.splice(o,1);s.status="approved",s.approvedAt=moment().toISOString(),reviews.unshift(s),console.log(`Admin approved review: ${r}`),t.status(200).json({success:!0,message:`Review ${r} approved.`})})),adminRouter.delete("/api/reviews/reject/:id",((e,t)=>{const r=e.params.id,o=unapprovedReviews.length;if(unapprovedReviews=unapprovedReviews.filter((e=>e.id!==r)),unapprovedReviews.length===o)return t.status(404).json({success:!1,message:"Review not found in pending list."});console.log(`Admin rejected pending review: ${r}`),t.status(200).json({success:!0,message:`Pending review ${r} rejected and removed.`})})),adminRouter.get("/api/reviews/approved",((e,t)=>{const r=[...reviews].filter((e=>"approved"===e.status)).sort(((e,t)=>{const r=e.approvedAt||e.createdAt,o=t.approvedAt||t.createdAt;return moment(o).diff(moment(r))}));t.status(200).json(r)})),adminRouter.delete("/api/reviews/approved/delete/:id",((e,t)=>{const r=e.params.id,o=reviews.findIndex((e=>e.id===r));if(-1===o)return t.status(404).json({success:!1,message:"Approved review not found."});const[s]=reviews.splice(o,1);console.log(`Admin deleted approved review: ${r} (Name: ${s.name||"N/A"})`),t.status(200).json({success:!0,message:`Approved review ${r} deleted successfully.`})})),app.use("/admin",adminRouter),setInterval((()=>{const e=moment();let t=0;reservations.forEach(((r,o)=>{"pending_verification"===r.status&&moment(r.verificationExpires).isBefore(e)&&(console.log(`Auto-expiring pending reservation: ID ${r.id}`),reservations[o].status="expired_unverified",reservations[o].verificationToken=null,t++)})),t>0&&console.log(`Cleanup marked ${t} as 'expired_unverified'.`)}),6e5);const ADMIN_API_KEY=process.env.ADMIN_API_KEY||null;app.get("/current-reservations",((e,t)=>(console.warn("/current-reservations is deprecated. Use admin panel for reservation info (if needed)."),t.status(410).json({error:"Endpoint deprecated. Use admin panel."})))),app.get("/",((e,t)=>{t.sendFile(path.join(__dirname,"public","index.html"))})),app.get("/:pageName.html",((e,t,r)=>{const o=e.params.pageName;if("admin"===o.toLowerCase())return t.redirect("/admin");if(/^[a-zA-Z0-9_-]+$/.test(o)){const e=path.join(__dirname,"public",`${o}.html`);fs.access(e,fs.constants.R_OK,(s=>{s?(console.log(`Static HTML file not found or not readable: ${o}.html`),r()):t.sendFile(e,(e=>{e&&(console.error(`Error serving ${o}.html:`,e),r(e))}))}))}else r()})),app.use(((e,t,r,o)=>{if(console.error("Unhandled Error:",e.stack||e),r.headersSent)return o(e);const s="Oops! Something went wrong on our end. Please try again later.";t.accepts("json")?t.originalUrl.startsWith("/admin/api/")?r.status(500).json({success:!1,message:"Internal Server Error"}):r.status(500).json({error:"Internal Server Error",details:s}):r.status(500).send(verificationResponsePage("Server Error",s,"error"))})),app.use(((e,t,r)=>{t.status(404).send(verificationResponsePage("Page Not Found",`Sorry, the page you requested (<code>${escapeHtml(e.originalUrl)}</code>) does not exist.`,"error"))})),app.listen(PORT,(()=>{console.log("-------------------------------------------------------"),console.log(` ✅ Green Bites Server Listening on http://localhost:${PORT}`),console.log(` 🕒 Restaurant Time Zone: ${RESTAURANT_TIMEZONE}`),console.log(` 📁 Static files served from: ${path.join(__dirname,"public")}`),console.log(` 📞 Restaurant Phone: ${escapeHtml(RESTAURANT_PHONE)}`),console.log(" --- Admin Access ---"),console.log(` 🔑 Admin Panel: http://localhost:${PORT}/admin`),console.log(` 👤 Admin User: ${ADMIN_USERNAME}`),console.log(" 🔒 Admin Pass: [Set via env or code]"),console.warn(" >>> ❗ Basic Authentication is NOT secure over HTTP. USE HTTPS! <<<"),console.warn(" >>> 💾 Data (Reservations, Reviews) is IN-MEMORY and LOST on restart! <<<"),console.warn(" >>> ⚙️ Ensure MAIL_USER/PASS (App Password) & ADMIN_USER/PASS are set securely. <<<"),console.log("-------------------------------------------------------")}));